{"ast":null,"code":"var _jsxFileName = \"/home/yisakt/Development/code/phase-2/Expense-Tracker-Phase-2-Project/src/ExpenseProvider.js\",\n  _s = $RefreshSig$();\n// import React, { createContext, useState } from \"react\";\n\n// export const ExpenseContext = createContext();\n\n// export const ExpenseProvider = ({ children }) => {\n//   const [expenses, setExpenses] = useState([]);\n//   const [budget, setBudget] = useState(0);\n\n//   const addExpense = (expense) => {\n//     setExpenses([...expenses, expense]);\n//   };\n\n//   const deleteExpense = (index) => {\n//     const updatedExpenses = [...expenses];\n//     updatedExpenses.splice(index, 1);\n//     setExpenses(updatedExpenses);\n//   };\n\n//   return (\n//     <ExpenseContext.Provider\n//       value={{ expenses, addExpense, deleteExpense, budget, setBudget }}\n//     >\n//       {children}\n//     </ExpenseContext.Provider>\n//   );\n// };\n\n// import React, { Component } from 'react';\n// import axios from 'axios';\n\n// const ExpenseContext = React.createContext();\n\n// class ExpenseProvider extends Component {\n//   state = {\n//     expenses: [],\n//     budget: null,\n//     apiUrl: \"http://localhost:3333\"\n//   };\n\n//   componentDidMount() {\n//     this.getExpenses();\n//     this.getBudget();\n//   }\n\n//   getExpenses = () => {\n//     axios\n//       .get(`${this.state.apiUrl}/expenses`)\n//       .then(response => {\n//         this.setState({ expenses: response.data });\n//       })\n//       .catch(error => console.log(error));\n//   };\n\n//   getBudget = () => {\n//     axios\n//       .get(`${this.state.apiUrl}/budget`)\n//       .then(response => {\n//         if (response.data.length > 0) {\n//           this.setState({ budget: response.data[0].total });\n//         }\n//       })\n//       .catch(error => console.log(error));\n//   };\n\n//   addExpense = (expense) => {\n//     axios\n//       .post(`${this.state.apiUrl}/expenses`, expense)\n//       .then(response => {\n//         this.setState({ expenses: [...this.state.expenses, response.data] });\n//       })\n//       .catch(error => console.log(error));\n//   };\n\n//   deleteExpense = (id) => {\n//     axios\n//       .delete(`${this.state.apiUrl}/expenses/${id}`)\n//       .then(response => {\n//         this.setState({ expenses: this.state.expenses.filter(expense => expense.id !== id) });\n//       })\n//       .catch(error => console.log(error));\n//   };\n\n//   addBudget = (newBudget) => {\n//     axios\n//       .post(`${this.state.apiUrl}/budget`, { id: 1, total: newBudget })\n//       .then(response => {\n//         this.setState({ budget: response.data.total });\n//       })\n//       .catch(error => console.log(error));\n//   };\n\n//   updateBudget = (updatedBudget) => {\n//     axios\n//       .put(`${this.state.apiUrl}/budget/1`, { total: updatedBudget })\n//       .then(response => {\n//         this.setState({ budget: response.data.total });\n//       })\n//       .catch(error => console.log(error));\n//   };\n\n//   render() {\n//     return (\n//       <ExpenseContext.Provider\n//         value={{\n//           expenses: this.state.expenses,\n//           budget: this.state.budget,\n//           addExpense: this.addExpense,\n//           deleteExpense: this.deleteExpense,\n//           addBudget: this.addBudget,\n//           updateBudget: this.updateBudget,\n//         }}\n//       >\n//         {this.props.children}\n//       </ExpenseContext.Provider>\n//     );\n//   }\n// }\n\n// const ExpenseConsumer = ExpenseContext.Consumer;\n\n// export { ExpenseProvider, ExpenseConsumer, ExpenseContext };\n\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ExpenseContext = /*#__PURE__*/createContext();\nconst ExpenseProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [expenses, setExpenses] = useState([]);\n  const [budget, setBudget] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const expensesRes = await axios.get(\"http://localhost:3333/expenses\");\n        const budgetRes = await axios.get(\"http://localhost:3333/budgets/1\");\n        setExpenses(expensesRes.data);\n        setBudget(budgetRes.data.amount);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchData();\n  }, []);\n  const addExpense = async expense => {\n    try {\n      const res = await axios.post(\"http://localhost:3333/expenses\", expense);\n      setExpenses(prevExpenses => [...prevExpenses, res.data]);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const deleteExpense = async id => {\n    try {\n      await axios.delete(`http://localhost:3333/expenses/${id}`);\n      setExpenses(prevExpenses => prevExpenses.filter(expense => expense.id !== id));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const updateExpense = async updatedExpense => {\n    try {\n      const res = await axios.put(`http://localhost:3333/expenses/${updatedExpense.id}`, updatedExpense);\n      setExpenses(prevExpenses => prevExpenses.map(expense => expense.id === updatedExpense.id ? res.data : expense));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const addBudget = async amount => {\n    try {\n      const res = await axios.post(\"http://localhost:3333/budgets\", {\n        id: 1,\n        amount\n      });\n      setBudget(res.data.amount);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const updateBudget = async amount => {\n    try {\n      const res = await axios.put(`http://localhost:3333/budgets/1`, {\n        id: 1,\n        amount\n      });\n      setBudget(res.data.amount);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ExpenseContext.Provider, {\n    value: {\n      expenses,\n      addExpense,\n      deleteExpense,\n      updateExpense,\n      budget,\n      setBudget,\n      addBudget,\n      updateBudget\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseProvider, \"5k6+OaxdNoGcQNlzwaQlXH+tHDQ=\");\n_c = ExpenseProvider;\nexport default ExpenseProvider;\nvar _c;\n$RefreshReg$(_c, \"ExpenseProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","ExpenseContext","ExpenseProvider","_ref","_s","children","expenses","setExpenses","budget","setBudget","fetchData","expensesRes","get","budgetRes","data","amount","err","console","log","addExpense","expense","res","post","prevExpenses","deleteExpense","id","delete","filter","updateExpense","updatedExpense","put","map","addBudget","updateBudget","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/yisakt/Development/code/phase-2/Expense-Tracker-Phase-2-Project/src/ExpenseProvider.js"],"sourcesContent":["// import React, { createContext, useState } from \"react\";\n\n// export const ExpenseContext = createContext();\n\n// export const ExpenseProvider = ({ children }) => {\n//   const [expenses, setExpenses] = useState([]);\n//   const [budget, setBudget] = useState(0);\n\n//   const addExpense = (expense) => {\n//     setExpenses([...expenses, expense]);\n//   };\n\n//   const deleteExpense = (index) => {\n//     const updatedExpenses = [...expenses];\n//     updatedExpenses.splice(index, 1);\n//     setExpenses(updatedExpenses);\n//   };\n\n//   return (\n//     <ExpenseContext.Provider\n//       value={{ expenses, addExpense, deleteExpense, budget, setBudget }}\n//     >\n//       {children}\n//     </ExpenseContext.Provider>\n//   );\n// };\n\n\n// import React, { Component } from 'react';\n// import axios from 'axios';\n\n// const ExpenseContext = React.createContext();\n\n// class ExpenseProvider extends Component {\n//   state = {\n//     expenses: [],\n//     budget: null,\n//     apiUrl: \"http://localhost:3333\"\n//   };\n\n//   componentDidMount() {\n//     this.getExpenses();\n//     this.getBudget();\n//   }\n\n//   getExpenses = () => {\n//     axios\n//       .get(`${this.state.apiUrl}/expenses`)\n//       .then(response => {\n//         this.setState({ expenses: response.data });\n//       })\n//       .catch(error => console.log(error));\n//   };\n\n//   getBudget = () => {\n//     axios\n//       .get(`${this.state.apiUrl}/budget`)\n//       .then(response => {\n//         if (response.data.length > 0) {\n//           this.setState({ budget: response.data[0].total });\n//         }\n//       })\n//       .catch(error => console.log(error));\n//   };\n\n//   addExpense = (expense) => {\n//     axios\n//       .post(`${this.state.apiUrl}/expenses`, expense)\n//       .then(response => {\n//         this.setState({ expenses: [...this.state.expenses, response.data] });\n//       })\n//       .catch(error => console.log(error));\n//   };\n\n//   deleteExpense = (id) => {\n//     axios\n//       .delete(`${this.state.apiUrl}/expenses/${id}`)\n//       .then(response => {\n//         this.setState({ expenses: this.state.expenses.filter(expense => expense.id !== id) });\n//       })\n//       .catch(error => console.log(error));\n//   };\n\n//   addBudget = (newBudget) => {\n//     axios\n//       .post(`${this.state.apiUrl}/budget`, { id: 1, total: newBudget })\n//       .then(response => {\n//         this.setState({ budget: response.data.total });\n//       })\n//       .catch(error => console.log(error));\n//   };\n\n//   updateBudget = (updatedBudget) => {\n//     axios\n//       .put(`${this.state.apiUrl}/budget/1`, { total: updatedBudget })\n//       .then(response => {\n//         this.setState({ budget: response.data.total });\n//       })\n//       .catch(error => console.log(error));\n//   };\n\n//   render() {\n//     return (\n//       <ExpenseContext.Provider\n//         value={{\n//           expenses: this.state.expenses,\n//           budget: this.state.budget,\n//           addExpense: this.addExpense,\n//           deleteExpense: this.deleteExpense,\n//           addBudget: this.addBudget,\n//           updateBudget: this.updateBudget,\n//         }}\n//       >\n//         {this.props.children}\n//       </ExpenseContext.Provider>\n//     );\n//   }\n// }\n\n// const ExpenseConsumer = ExpenseContext.Consumer;\n\n// export { ExpenseProvider, ExpenseConsumer, ExpenseContext };\n\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport const ExpenseContext = createContext();\n\nconst ExpenseProvider = ({ children }) => {\n  const [expenses, setExpenses] = useState([]);\n  const [budget, setBudget] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const expensesRes = await axios.get(\"http://localhost:3333/expenses\");\n        const budgetRes = await axios.get(\"http://localhost:3333/budgets/1\");\n        setExpenses(expensesRes.data);\n        setBudget(budgetRes.data.amount);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchData();\n  }, []);\n\n  const addExpense = async (expense) => {\n    try {\n      const res = await axios.post(\"http://localhost:3333/expenses\", expense);\n      setExpenses((prevExpenses) => [...prevExpenses, res.data]);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const deleteExpense = async (id) => {\n    try {\n      await axios.delete(`http://localhost:3333/expenses/${id}`);\n      setExpenses((prevExpenses) => prevExpenses.filter((expense) => expense.id !== id));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const updateExpense = async (updatedExpense) => {\n    try {\n      const res = await axios.put(`http://localhost:3333/expenses/${updatedExpense.id}`, updatedExpense);\n      setExpenses((prevExpenses) =>\n        prevExpenses.map((expense) => (expense.id === updatedExpense.id ? res.data : expense))\n      );\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const addBudget = async (amount) => {\n    try {\n      const res = await axios.post(\"http://localhost:3333/budgets\", { id: 1, amount });\n      setBudget(res.data.amount);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const updateBudget = async (amount) => {\n    try {\n      const res = await axios.put(`http://localhost:3333/budgets/1`, { id: 1, amount });\n      setBudget(res.data.amount);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <ExpenseContext.Provider\n      value={{ expenses, addExpense, deleteExpense, updateExpense, budget, setBudget, addBudget, updateBudget }}\n    >\n      {children}\n    </ExpenseContext.Provider>\n  );\n};\n\nexport default ExpenseProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}