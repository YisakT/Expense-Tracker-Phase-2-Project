{"ast":null,"code":"\n// import React, { Component } from 'react';\n// import axios from 'axios';\n\n// const ExpenseContext = React.createContext();\n\n// class ExpenseProvider extends Component {\n//   state = {\n//     expenses: [],\n//     budget: null,\n//     apiUrl: \"http://localhost:3333\"\n//   };\n\n//   componentDidMount() {\n//     this.getExpenses();\n//     this.getBudget();\n//   }\n\n//   getExpenses = () => {\n//     axios\n//       .get(`${this.state.apiUrl}/expenses`)\n//       .then(response => {\n//         this.setState({ expenses: response.data });\n//       })\n//       .catch(error => console.log(error));\n//   };\n\n//   getBudget = () => {\n//     axios\n//       .get(`${this.state.apiUrl}/budget`)\n//       .then(response => {\n//         if (response.data.length > 0) {\n//           this.setState({ budget: response.data[0].total });\n//         }\n//       })\n//       .catch(error => console.log(error));\n//   };\n\n//   addExpense = (expense) => {\n//     axios\n//       .post(`${this.state.apiUrl}/expenses`, expense)\n//       .then(response => {\n//         this.setState({ expenses: [...this.state.expenses, response.data] });\n//       })\n//       .catch(error => console.log(error));\n//   };\n\n//   deleteExpense = (id) => {\n//     axios\n//       .delete(`${this.state.apiUrl}/expenses/${id}`)\n//       .then(response => {\n//         this.setState({ expenses: this.state.expenses.filter(expense => expense.id !== id) });\n//       })\n//       .catch(error => console.log(error));\n//   };\n\n//   addBudget = (newBudget) => {\n//     axios\n//       .post(`${this.state.apiUrl}/budget`, { id: 1, total: newBudget })\n//       .then(response => {\n//         this.setState({ budget: response.data.total });\n//       })\n//       .catch(error => console.log(error));\n//   };\n\n//   updateBudget = (updatedBudget) => {\n//     axios\n//       .put(`${this.state.apiUrl}/budget/1`, { total: updatedBudget })\n//       .then(response => {\n//         this.setState({ budget: response.data.total });\n//       })\n//       .catch(error => console.log(error));\n//   };\n\n//   render() {\n//     return (\n//       <ExpenseContext.Provider\n//         value={{\n//           expenses: this.state.expenses,\n//           budget: this.state.budget,\n//           addExpense: this.addExpense,\n//           deleteExpense: this.deleteExpense,\n//           addBudget: this.addBudget,\n//           updateBudget: this.updateBudget,\n//         }}\n//       >\n//         {this.props.children}\n//       </ExpenseContext.Provider>\n//     );\n//   }\n// }\n\n// const ExpenseConsumer = ExpenseContext.Consumer;\n\n// export { ExpenseProvider, ExpenseConsumer, ExpenseContext };","map":{"version":3,"names":[],"sources":["/home/yisakt/Development/code/phase-2/Expense-Tracker-Phase-2-Project/src/ExpenseProvider.js"],"sourcesContent":["\n// import React, { Component } from 'react';\n// import axios from 'axios';\n\n// const ExpenseContext = React.createContext();\n\n// class ExpenseProvider extends Component {\n//   state = {\n//     expenses: [],\n//     budget: null,\n//     apiUrl: \"http://localhost:3333\"\n//   };\n\n//   componentDidMount() {\n//     this.getExpenses();\n//     this.getBudget();\n//   }\n\n//   getExpenses = () => {\n//     axios\n//       .get(`${this.state.apiUrl}/expenses`)\n//       .then(response => {\n//         this.setState({ expenses: response.data });\n//       })\n//       .catch(error => console.log(error));\n//   };\n\n//   getBudget = () => {\n//     axios\n//       .get(`${this.state.apiUrl}/budget`)\n//       .then(response => {\n//         if (response.data.length > 0) {\n//           this.setState({ budget: response.data[0].total });\n//         }\n//       })\n//       .catch(error => console.log(error));\n//   };\n\n//   addExpense = (expense) => {\n//     axios\n//       .post(`${this.state.apiUrl}/expenses`, expense)\n//       .then(response => {\n//         this.setState({ expenses: [...this.state.expenses, response.data] });\n//       })\n//       .catch(error => console.log(error));\n//   };\n\n//   deleteExpense = (id) => {\n//     axios\n//       .delete(`${this.state.apiUrl}/expenses/${id}`)\n//       .then(response => {\n//         this.setState({ expenses: this.state.expenses.filter(expense => expense.id !== id) });\n//       })\n//       .catch(error => console.log(error));\n//   };\n\n//   addBudget = (newBudget) => {\n//     axios\n//       .post(`${this.state.apiUrl}/budget`, { id: 1, total: newBudget })\n//       .then(response => {\n//         this.setState({ budget: response.data.total });\n//       })\n//       .catch(error => console.log(error));\n//   };\n\n//   updateBudget = (updatedBudget) => {\n//     axios\n//       .put(`${this.state.apiUrl}/budget/1`, { total: updatedBudget })\n//       .then(response => {\n//         this.setState({ budget: response.data.total });\n//       })\n//       .catch(error => console.log(error));\n//   };\n\n//   render() {\n//     return (\n//       <ExpenseContext.Provider\n//         value={{\n//           expenses: this.state.expenses,\n//           budget: this.state.budget,\n//           addExpense: this.addExpense,\n//           deleteExpense: this.deleteExpense,\n//           addBudget: this.addBudget,\n//           updateBudget: this.updateBudget,\n//         }}\n//       >\n//         {this.props.children}\n//       </ExpenseContext.Provider>\n//     );\n//   }\n// }\n\n// const ExpenseConsumer = ExpenseContext.Consumer;\n\n// export { ExpenseProvider, ExpenseConsumer, ExpenseContext };\n\n"],"mappings":";AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}