{"ast":null,"code":"var _jsxFileName = \"/home/yisakt/Development/code/phase-2/Expense-Tracker-Phase-2-Project/src/BudgetForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// interface Props {\n//   setBudget: (value: number) => void;\n// }\n\n// const BudgetForm: React.FC<Props> = ({ setBudget }) => {\n//   const [budget, setBudgetValue] = useState(\"\");\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (budget !== \"\" && !isNaN(Number(budget))) {\n//       setBudget(parseFloat(budget));\n//       setBudgetValue(\"\");\n//     }\n//   };\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <input\n//         type=\"number\"\n//         placeholder=\"Enter Budget\"\n//         value={budget}\n//         onChange={(e) => setBudgetValue(e.target.value)}\n//       />\n//       <button type=\"submit\">Set Budget</button>\n//     </form>\n//   );\n// }\n\n// export default BudgetForm;\n\n// BudgetForm.js\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BudgetForm = _ref => {\n  _s();\n  let {\n    updateBudget\n  } = _ref;\n  const [budget, setBudgetValue] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (budget !== \"\" && !isNaN(Number(budget))) {\n      updateBudget(parseFloat(budget));\n      setBudgetValue(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter Budget\",\n      value: budget,\n      onChange: e => setBudgetValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Set Budget\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(BudgetForm, \"tD13tts08SEgzcFTUg0VJz8sDLw=\");\n_c = BudgetForm;\nexport default BudgetForm;\nvar _c;\n$RefreshReg$(_c, \"BudgetForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BudgetForm","_ref","_s","updateBudget","budget","setBudgetValue","handleSubmit","e","preventDefault","isNaN","Number","parseFloat","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/yisakt/Development/code/phase-2/Expense-Tracker-Phase-2-Project/src/BudgetForm.js"],"sourcesContent":["// import React, { useState } from \"react\";\n\n// interface Props {\n//   setBudget: (value: number) => void;\n// }\n\n// const BudgetForm: React.FC<Props> = ({ setBudget }) => {\n//   const [budget, setBudgetValue] = useState(\"\");\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (budget !== \"\" && !isNaN(Number(budget))) {\n//       setBudget(parseFloat(budget));\n//       setBudgetValue(\"\");\n//     }\n//   };\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <input\n//         type=\"number\"\n//         placeholder=\"Enter Budget\"\n//         value={budget}\n//         onChange={(e) => setBudgetValue(e.target.value)}\n//       />\n//       <button type=\"submit\">Set Budget</button>\n//     </form>\n//   );\n// }\n\n// export default BudgetForm;\n\n\n// BudgetForm.js\nimport React, { useState } from \"react\";\n\ninterface Props {\n  updateBudget: (value: number) => void;\n}\n\nconst BudgetForm: React.FC<Props> = ({ updateBudget }) => {\n  const [budget, setBudgetValue] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (budget !== \"\" && !isNaN(Number(budget))) {\n      updateBudget(parseFloat(budget));\n      setBudgetValue(\"\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"number\"\n        placeholder=\"Enter Budget\"\n        value={budget}\n        onChange={(e) => setBudgetValue(e.target.value)}\n      />\n      <button type=\"submit\">Set Budget</button>\n    </form>\n  );\n}\n\nexport default BudgetForm;\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMxC,MAAMC,UAA2B,GAAGC,IAAA,IAAsB;EAAAC,EAAA;EAAA,IAArB;IAAEC;EAAa,CAAC,GAAAF,IAAA;EACnD,MAAM,CAACG,MAAM,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE7C,MAAMS,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIJ,MAAM,KAAK,EAAE,IAAI,CAACK,KAAK,CAACC,MAAM,CAACN,MAAM,CAAC,CAAC,EAAE;MAC3CD,YAAY,CAACQ,UAAU,CAACP,MAAM,CAAC,CAAC;MAChCC,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;EAED,oBACEN,OAAA;IAAMa,QAAQ,EAAEN,YAAa;IAAAO,QAAA,gBAC3Bd,OAAA;MACEe,IAAI,EAAC,QAAQ;MACbC,WAAW,EAAC,cAAc;MAC1BC,KAAK,EAAEZ,MAAO;MACda,QAAQ,EAAGV,CAAC,IAAKF,cAAc,CAACE,CAAC,CAACW,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACFvB,OAAA;MAAQe,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEX,CAAC;AAAApB,EAAA,CAtBKF,UAA2B;AAAAuB,EAAA,GAA3BvB,UAA2B;AAwBjC,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}